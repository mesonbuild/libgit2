project('libgit2', 'c',
	version: '0.27.4',
	meson_version: '>=0.46.0',
	default_options: ['c_std=gnu89'],
	license: 'GPLv2 + Linking Exception')

pkg = import('pkgconfig')
win = import('windows')
i = include_directories('include')

# Note, Files are Generated with commands such as the following
# PS > Get-ChildItem .\src\win32 | ?{ $_.Extension -eq '.c' } | rvpa -Relative | % { echo "'$($_ -replace '\\','/' -replace '^./','')'," }

src_git2 = files(
	'src/alloc.c',
	'src/annotated_commit.c',
	'src/apply.c',
	'src/attr.c',
	'src/attrcache.c',
	'src/attr_file.c',
	'src/blame.c',
	'src/blame_git.c',
	'src/blob.c',
	'src/branch.c',
	'src/buffer.c',
	'src/buf_text.c',
	'src/cache.c',
	'src/checkout.c',
	'src/cherrypick.c',
	'src/clone.c',
	'src/commit.c',
	'src/commit_list.c',
	'src/config.c',
	'src/config_cache.c',
	'src/config_file.c',
	'src/config_parse.c',
	'src/crlf.c',
	'src/date.c',
	'src/delta.c',
	'src/describe.c',
	'src/diff.c',
	'src/diff_driver.c',
	'src/diff_file.c',
	'src/diff_generate.c',
	'src/diff_parse.c',
	'src/diff_print.c',
	'src/diff_stats.c',
	'src/diff_tform.c',
	'src/diff_xdiff.c',
	'src/errors.c',
	'src/fetch.c',
	'src/fetchhead.c',
	'src/filebuf.c',
	'src/fileops.c',
	'src/filter.c',
	'src/fnmatch.c',
	'src/global.c',
	'src/graph.c',
	'src/hash.c',
	'src/hashsig.c',
	'src/ident.c',
	'src/idxmap.c',
	'src/ignore.c',
	'src/index.c',
	'src/indexer.c',
	'src/iterator.c',
	'src/mailmap.c',
	'src/merge.c',
	'src/merge_driver.c',
	'src/merge_file.c',
	'src/message.c',
	'src/mwindow.c',
	'src/netops.c',
	'src/notes.c',
	'src/object.c',
	'src/object_api.c',
	'src/odb.c',
	'src/odb_loose.c',
	'src/odb_mempack.c',
	'src/odb_pack.c',
	'src/offmap.c',
	'src/oid.c',
	'src/oidarray.c',
	'src/oidmap.c',
	'src/pack-objects.c',
	'src/pack.c',
	'src/parse.c',
	'src/patch.c',
	'src/patch_generate.c',
	'src/patch_parse.c',
	'src/path.c',
	'src/pathspec.c',
	'src/pool.c',
	'src/posix.c',
	'src/pqueue.c',
	'src/proxy.c',
	'src/push.c',
	'src/rebase.c',
	'src/refdb.c',
	'src/refdb_fs.c',
	'src/reflog.c',
	'src/refs.c',
	'src/refspec.c',
	'src/remote.c',
	'src/repository.c',
	'src/reset.c',
	'src/revert.c',
	'src/revparse.c',
	'src/revwalk.c',
	'src/settings.c',
	'src/sha1_lookup.c',
	'src/signature.c',
	'src/sortedcache.c',
	'src/stash.c',
	'src/status.c',
	'src/stdalloc.c',
	'src/strmap.c',
	'src/submodule.c',
	'src/sysdir.c',
	'src/tag.c',
	'src/thread-utils.c',
	'src/trace.c',
	'src/trailer.c',
	'src/transaction.c',
	'src/transport.c',
	'src/tree-cache.c',
	'src/tree.c',
	'src/tsort.c',
	'src/util.c',
	'src/varint.c',
	'src/vector.c',
	'src/worktree.c',
	'src/zstream.c',
	'src/streams/curl.c',
	'src/streams/mbedtls.c',
	'src/streams/openssl.c',
	'src/streams/socket.c',
	'src/streams/stransport.c',
	'src/streams/tls.c',
	'src/transports/auth.c',
	'src/transports/auth_negotiate.c',
	'src/transports/cred.c',
	'src/transports/cred_helpers.c',
	'src/transports/git.c',
	'src/transports/http.c',
	'src/transports/local.c',
	'src/transports/smart.c',
	'src/transports/smart_pkt.c',
	'src/transports/smart_protocol.c',
	'src/transports/ssh.c',
	'src/transports/winhttp.c',
	'src/xdiff/xdiffi.c',
	'src/xdiff/xemit.c',
	'src/xdiff/xhistogram.c',
	'src/xdiff/xmerge.c',
	'src/xdiff/xpatience.c',
	'src/xdiff/xprepare.c',
	'src/xdiff/xutils.c'
)
h_inc_git2 = files(
	'include/git2.h',
	'include/git2/annotated_commit.h',
	'include/git2/attr.h',
	'include/git2/blame.h',
	'include/git2/blob.h',
	'include/git2/branch.h',
	'include/git2/buffer.h',
	'include/git2/checkout.h',
	'include/git2/cherrypick.h',
	'include/git2/clone.h',
	'include/git2/commit.h',
	'include/git2/common.h',
	'include/git2/config.h',
	'include/git2/cred_helpers.h',
	'include/git2/describe.h',
	'include/git2/diff.h',
	'include/git2/errors.h',
	'include/git2/filter.h',
	'include/git2/global.h',
	'include/git2/graph.h',
	'include/git2/ignore.h',
	'include/git2/index.h',
	'include/git2/indexer.h',
	'include/git2/inttypes.h',
	'include/git2/mailmap.h',
	'include/git2/merge.h',
	'include/git2/message.h',
	'include/git2/net.h',
	'include/git2/notes.h',
	'include/git2/object.h',
	'include/git2/odb.h',
	'include/git2/odb_backend.h',
	'include/git2/oid.h',
	'include/git2/oidarray.h',
	'include/git2/pack.h',
	'include/git2/patch.h',
	'include/git2/pathspec.h',
	'include/git2/proxy.h',
	'include/git2/rebase.h',
	'include/git2/refdb.h',
	'include/git2/reflog.h',
	'include/git2/refs.h',
	'include/git2/refspec.h',
	'include/git2/remote.h',
	'include/git2/repository.h',
	'include/git2/reset.h',
	'include/git2/revert.h',
	'include/git2/revparse.h',
	'include/git2/revwalk.h',
	'include/git2/signature.h',
	'include/git2/stash.h',
	'include/git2/status.h',
	'include/git2/stdint.h',
	'include/git2/strarray.h',
	'include/git2/submodule.h',
	'include/git2/tag.h',
	'include/git2/trace.h',
	'include/git2/transaction.h',
	'include/git2/transport.h',
	'include/git2/tree.h',
	'include/git2/types.h',
	'include/git2/version.h',
	'include/git2/worktree.h',
	'include/git2/sys/alloc.h',
	'include/git2/sys/commit.h',
	'include/git2/sys/config.h',
	'include/git2/sys/diff.h',
	'include/git2/sys/filter.h',
	'include/git2/sys/hashsig.h',
	'include/git2/sys/index.h',
	'include/git2/sys/mempack.h',
	'include/git2/sys/merge.h',
	'include/git2/sys/odb_backend.h',
	'include/git2/sys/openssl.h',
	'include/git2/sys/refdb_backend.h',
	'include/git2/sys/reflog.h',
	'include/git2/sys/refs.h',
	'include/git2/sys/repository.h',
	'include/git2/sys/stream.h',
	'include/git2/sys/time.h',
	'include/git2/sys/transport.h'
)
if host_machine.system() == 'windows'
	win_rc = win.compile_resources('src/win32/git2.rc')
	src_os = files(
		'src/win32/dir.c',
		'src/win32/error.c',
		'src/win32/findfile.c',
		'src/win32/map.c',
		'src/win32/path_w32.c',
		'src/win32/posix_w32.c',
		'src/win32/precompiled.c',
		'src/win32/thread.c',
		'src/win32/utf-conv.c',
		'src/win32/w32_buffer.c',
		'src/win32/w32_crtdbg_stacktrace.c',
		'src/win32/w32_stack.c',
		'src/win32/w32_util.c' )
	src_os += win_rc
else
	src_os = files(
	'src/unix/map.c',
	'src/unix/realpath.c' )
endif
cc = meson.get_compiler('c')
src_vendor = files()
i_vendor = []
if not cc.has_header('regex.h')
	src_vendor += files('deps/regex/regex.c')
	i_vendor += ['deps/regex']
endif
if not cc.has_header('http_parser.h')
	src_vendor += files(
		'deps/http-parser/http_parser.c' )
	i_vendor += ['deps/http-parser']
endif
subdir('include/git2/sys')
if get_option('sha1_backend') == 'Generic'
	src_vendor += files('src/hash/hash_generic.c')
endif
libgit2_deps = []
if get_option('threadsafe')
	libgit2_deps += dependency('threads')
endif
libgit2_deps += dependency('zlib', fallback: ['zlib', 'zlib_dep'])

libgit2_lib = library('git2', src_git2 + src_os + src_vendor,
	include_directories: [i, include_directories(i_vendor, 'src')],
	install: true,
	dependencies: libgit2_deps)

libgit2_dep = declare_dependency(
	include_directories: i,
	link_with: libgit2_lib,
	version: meson.project_version())

install_headers(h_inc_git2)
